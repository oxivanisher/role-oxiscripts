---
- name: Ensure job dependencies
  ansible.builtin.package:
    name:
      - rsync
      - fdupes
    state: present
  become: true
  become_user: root

# basic install
- name: Check if oxiscripts are already installed
  ansible.builtin.stat:
    path: /etc/oxiscripts/
  register: oxiscripts_dir

- name: Fetch oxiscripts installer
  ansible.builtin.get_url:
    url: "{{ oxiscripts_mirror }}"
    dest: /tmp/install.sh
    mode: "0755"
  when: not oxiscripts_dir.stat.exists or oxiscripts_update

- name: Run oxiscripts installer # noqa: command-instead-of-shell
  ansible.builtin.shell: /tmp/install.sh
  changed_when: true
  when: not oxiscripts_dir.stat.exists or oxiscripts_update
  become: true
  become_user: root

- name: Remove oxiscripts installer
  ansible.builtin.file:
    path: /tmp/install.sh
    state: absent
  when: not oxiscripts_dir.stat.exists or oxiscripts_update

# new backup scripts
- name: Check for new backup-cleanup script version
  ansible.builtin.stat:
    path: /etc/oxiscripts/jobs/backup-cleanup.sh.new
  register: oxiscript_new_backup_cleanup
  become: true
  become_user: root

- name: Use new backup-cleanup script version
  ansible.builtin.command: mv /etc/oxiscripts/jobs/backup-cleanup.sh.new /etc/oxiscripts/jobs/backup-cleanup.sh
  changed_when: true
  when: oxiscript_new_backup_cleanup.stat.exists
  become: true
  become_user: root

- name: Check for new backup-system script version
  ansible.builtin.stat:
    path: /etc/oxiscripts/jobs/backup-system.sh.new
  register: oxiscript_new_system_backup
  become: true
  become_user: root

- name: Use new backup-system script version
  ansible.builtin.command: mv /etc/oxiscripts/jobs/backup-system.sh.new /etc/oxiscripts/jobs/backup-system.sh
  changed_when: true
  when: oxiscript_new_system_backup.stat.exists
  become: true
  become_user: root

- name: Check for new backup-scripts script version
  ansible.builtin.stat:
    path: /etc/oxiscripts/jobs/backup-scripts.sh.new
  register: oxiscript_new_backup_scripts
  become: true
  become_user: root

- name: Use new backup-scripts script version
  ansible.builtin.command: mv /etc/oxiscripts/jobs/backup-scripts.sh.new /etc/oxiscripts/jobs/backup-scripts.sh
  changed_when: true
  when: oxiscript_new_backup_scripts.stat.exists
  become: true
  become_user: root

# basic configuration
- name: Set root email
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/setup.sh
    regexp: "^export ADMINMAIL="
    line: "export ADMINMAIL={{ oxiscripts_email }}"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

# backup rsync
- name: Disable example rsync backup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-rsync.sh
    regexp: '^rsyncbackup /mnt/backup rsync://backup@your.host.com/rsync-dir "--bwlimit=1000"'
    line: '#rsyncbackup /mnt/backup rsync://backup@your.host.com/rsync-dir "--bwlimit=1000"'
  changed_when: false
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

- name: Configure base rsync backup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-rsync.sh
    regexp: "rsyncbackup /mnt/backup/ {{ oxiscripts_rsync_user }}@{{ oxiscripts_rsync_server }}::{{ oxiscripts_rsync_path }}"
    line: >
      EXCLUDED_DIR="lost+found" RSYNC_PASSWORD="{{ oxiscripts_rsync_password }}" rsyncbackup /mnt/backup/
      {{ oxiscripts_rsync_user }}@{{ oxiscripts_rsync_server }}::{{ oxiscripts_rsync_path }} "{{ oxiscripts_rsync_mnt_backup_options }}"
  notify: Enable daily rsync-backup
  ignore_errors: "{{ ansible_check_mode }}"
  when: oxiscripts_rsync_path | default('', true) | length > 0
  become: true
  become_user: root

# backup documents
- name: Configure documents backup script
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-documents.sh
    regexp: "rdiffbackup {{ item.path }}"
    line: EXCLUDED_DIR="{{ item.exclude | default('') }}" rdiffbackup {{ item.path }} {{ item.target }} {{ item.duration | default('3M') }}
  loop: "{{ oxiscripts_documents_backup | default([]) }}"
  notify: Enable daily documents-backup
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

# backup additional rsync
- name: Removing old rsync backup link
  ansible.builtin.file:
    path: /etc/cron.daily/backup-rsync
    state: absent
  notify: Enable daily rsync-backup
  become: true
  become_user: root

- name: Configure additional rsync backups
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-rsync.sh
    regexp: "rsyncbackup {{ item.path }}"
    line: >
      EXCLUDED_DIR="{{ item.exclude | default('lost+found') }}" RSYNC_PASSWORD="{{ item.password | default(oxiscripts_rsync_password) }}"
      rsyncbackup {{ item.path }} {{ item.user | default(oxiscripts_rsync_user) }}@{{ item.target }} "{{ item.options }}"
  loop: "{{ oxiscripts_rsync_backup | default([]) }}"
  notify: Enable daily rsync-backup
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

# configure cleanup
- name: Removing old daily backup cleanup link
  ansible.builtin.file:
    path: /etc/cron.daily/backup-cleanup
    state: absent
  notify: Enable daily backup-cleanup
  become: true
  become_user: root

- name: Configure backup cleanup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-cleanup.sh
    regexp: "^backupcleanup"
    line: "backupcleanup {{ oxiscripts_backup_cleanup }}"
  notify: Enable daily backup-cleanup
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root
