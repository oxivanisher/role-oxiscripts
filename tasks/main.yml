---

- name: ensure rsync
  ansible.builtin.package:
    name: rsync
    state: present

# basic install
- name: check if already installed
  ansible.builtin.stat:
    path: /etc/oxiscripts/
  register: oxiscripts_dir

- name: fetch installer
  ansible.builtin.get_url:
    url: '{{ oxiscripts.mirror }}'
    dest: /tmp/install.sh
    mode: 0755
  when: not oxiscripts_dir.stat.exists or oxiscripts_update

- name: run installer
  ansible.builtin.shell: /tmp/install.sh
  when: not oxiscripts_dir.stat.exists or oxiscripts_update

- name: remove installer
  ansible.builtin.file:
    path: /tmp/install.sh
    state: absent
  when: not oxiscripts_dir.stat.exists or oxiscripts_update

# basic configuration
- name: set root email
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/setup.sh
    regexp: '^export ADMINMAIL='
    line: 'export ADMINMAIL={{ oxiscripts.email }}'
  ignore_errors: "{{ ansible_check_mode }}"

# backup rsync
- name: disable example rsync backup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-rsync.sh
    regexp: '^rsyncbackup /mnt/backup rsync://backup@your.host.com/rsync-dir "--bwlimit=1000"'
    line: '#rsyncbackup /mnt/backup rsync://backup@your.host.com/rsync-dir "--bwlimit=1000"'
  changed_when: false
  ignore_errors: "{{ ansible_check_mode }}"

- name: configure base rsync backup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-rsync.sh
    regexp: 'rsyncbackup /mnt/backup/ {{ oxiscripts.rsync.user }}@{{ oxiscripts.rsync.server }}::{{ oxiscripts.rsync.path }}'
    line: 'EXCLUDED_DIR="lost+found" RSYNC_PASSWORD="{{ oxiscripts.rsync.password }}" rsyncbackup /mnt/backup/ {{ oxiscripts.rsync.user }}@{{ oxiscripts.rsync.server }}::{{ oxiscripts.rsync.path }} ""'  # noqa 204
  notify: enable rsync-backup
  ignore_errors: "{{ ansible_check_mode }}"

# backup documents
- name: configure documents backup script
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-documents.sh
    line: "{{ item }}"
  loop: "{{ oxiscripts.documents_backup[ansible_hostname] | default([]) }}"
  notify: enable documents-backup
  ignore_errors: "{{ ansible_check_mode }}"

# backup additional rsync
- name: removing old rsync backup link
  ansible.builtin.file:
    path: /etc/cron.daily/backup-rsync
    state: absent
  notify: enable rsync-backup

- name: configure additional rsync backups
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-rsync.sh
    line: "{{ item }}"
  loop: "{{ oxiscripts.rsync_backup[ansible_hostname] | default([]) }}"
  notify: enable rsync-backup
  ignore_errors: "{{ ansible_check_mode }}"

# configure cleanup
- name: removing old daily backup cleanup link
  ansible.builtin.file:
    path: /etc/cron.daily/backup-cleanup
    state: absent
  notify: enable backup-cleanup

- name: configure backup cleanup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-cleanup.sh
    regexp: '^backupcleanup'
    line: "backupcleanup 60"
  notify: enable backup-cleanup
  ignore_errors: "{{ ansible_check_mode }}"
