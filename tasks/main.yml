---

- name: Ensure rsync
  ansible.builtin.package:
    name: rsync
    state: present

# basic install
- name: Check if oxiscripts are already installed
  ansible.builtin.stat:
    path: /etc/oxiscripts/
  register: oxiscripts_dir

- name: Fetch oxiscripts installer
  ansible.builtin.get_url:
    url: '{{ oxiscripts.mirror }}'
    dest: /tmp/install.sh
    mode: 0755
  when: not oxiscripts_dir.stat.exists or oxiscripts_update

- name: Run oxiscripts installer
  ansible.builtin.shell: /tmp/install.sh
  when: not oxiscripts_dir.stat.exists or oxiscripts_update

- name: Remove oxiscripts installer
  ansible.builtin.file:
    path: /tmp/install.sh
    state: absent
  when: not oxiscripts_dir.stat.exists or oxiscripts_update

# new backup scripts
- name: Check for new backup-cleanup script version
  ansible.builtin.stat:
    path: /etc/oxiscripts/jobs/backup-cleanup.sh.new
  register: oxiscript_new_backup_cleanup

- name: Use new backup-cleanup script version
  ansible.builtin.command: mv /etc/oxiscripts/jobs/backup-cleanup.sh.new /etc/oxiscripts/jobs/backup-cleanup.sh
  when: oxiscript_new_backup_cleanup.stat.exists

- name: Check for new system-backup script version
  ansible.builtin.stat:
    path: /etc/oxiscripts/jobs/backup-system.sh.new
  register: oxiscript_new_system_backup

- name: Use new system-backup script version
  ansible.builtin.command: mv /etc/oxiscripts/jobs/backup-system.sh.new /etc/oxiscripts/jobs/backup-system.sh
  when: oxiscript_new_system_backup.stat.exists

- name: Check for new backup-scripts script version
  ansible.builtin.stat:
    path: /etc/oxiscripts/jobs/backup-scripts.sh.new
  register: oxiscript_new_backup_scripts

- name: Use new backup-scripts script version
  ansible.builtin.command: mv /etc/oxiscripts/jobs/backup-scripts.sh.new /etc/oxiscripts/jobs/backup-scripts.sh
  when: oxiscript_new_backup_scripts.stat.exists

# basic configuration
- name: Set root email
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/setup.sh
    regexp: '^export ADMINMAIL='
    line: 'export ADMINMAIL={{ oxiscripts.email }}'
  ignore_errors: "{{ ansible_check_mode }}"

# backup rsync
- name: Disable example rsync backup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-rsync.sh
    regexp: '^rsyncbackup /mnt/backup rsync://backup@your.host.com/rsync-dir "--bwlimit=1000"'
    line: '#rsyncbackup /mnt/backup rsync://backup@your.host.com/rsync-dir "--bwlimit=1000"'
  changed_when: false
  ignore_errors: "{{ ansible_check_mode }}"

- name: Configure base rsync backup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-rsync.sh
    regexp: 'rsyncbackup /mnt/backup/ {{ oxiscripts.rsync.user }}@{{ oxiscripts.rsync.server }}::{{ oxiscripts.rsync.path }}'
    line: 'EXCLUDED_DIR="lost+found" RSYNC_PASSWORD="{{ oxiscripts.rsync.password }}" rsyncbackup /mnt/backup/ {{ oxiscripts.rsync.user }}@{{ oxiscripts.rsync.server }}::{{ oxiscripts.rsync.path }} ""'  # noqa 204
  notify: Enable rsync-backup
  ignore_errors: "{{ ansible_check_mode }}"

# backup documents
- name: Configure documents backup script
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-documents.sh
    line: "{{ item }}"
  loop: "{{ oxiscripts.documents_backup[ansible_hostname] | default([]) }}"
  notify: Enable daily documents-backup
  ignore_errors: "{{ ansible_check_mode }}"

# backup additional rsync
- name: Removing old rsync backup link
  ansible.builtin.file:
    path: /etc/cron.daily/backup-rsync
    state: absent
  notify: Enable daily rsync-backup

- name: Configure additional rsync backups
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-rsync.sh
    line: "{{ item }}"
  loop: "{{ oxiscripts.rsync_backup[ansible_hostname] | default([]) }}"
  notify: Enable daily rsync-backup
  ignore_errors: "{{ ansible_check_mode }}"

# configure cleanup
- name: Removing old daily backup cleanup link
  ansible.builtin.file:
    path: /etc/cron.daily/backup-cleanup
    state: absent
  notify: Enable daily backup-cleanup

- name: Configure backup cleanup
  ansible.builtin.lineinfile:
    dest: /etc/oxiscripts/jobs/backup-cleanup.sh
    regexp: '^backupcleanup'
    line: "backupcleanup 60"
  notify: Enable daily backup-cleanup
  ignore_errors: "{{ ansible_check_mode }}"
